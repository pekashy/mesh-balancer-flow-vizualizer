static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 30000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend-1
              domains: ["backend-1:8000"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: backend-1
                    internal_redirect_policy:
                      redirect_response_codes: [ 302 ]
            - name: backend-2
              domains: ["backend-2:8000"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: backend-2
                    internal_redirect_policy:
                      redirect_response_codes: [ 302 ]
            - name: backend-3
              domains: ["backend-3:8000"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: backend-3
                    internal_redirect_policy:
                      redirect_response_codes: [ 302 ]
            - name: backend-4
              domains: ["backend-4:8000"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: backend-4
                    internal_redirect_policy:
                      redirect_response_codes: [ 302 ]
            - name: balancing
              domains: ["*balancer*", "0.0.0.0:30000"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: balancer-cluster
                    internal_redirect_policy:
                      redirect_response_codes: [ 302 ]
          http_filters:
            - name: envoy.filters.http.lua
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                inline_code: |
                  function envoy_on_request(request_handle)
                    request_handle:logInfo("Hello!")
                    local metadata = request_handle:streamInfo():dynamicMetadata()
                    local headers = request_handle:headers()
                    local rid = headers:get("x-request-id")
                    request_handle:logInfo(rid)
                    if rid ~= nil then
                      metadata:set("envoy.filters.http.lua", "req.x-request-id", rid)
                    end
                  end
                  function envoy_on_response(response_handle)
                    response_handle:logInfo("Goodbye!")
                    local metadata = response_handle:streamInfo():dynamicMetadata():get("envoy.filters.http.lua")
                    local rid = metadata["req.x-request-id"]
                    local headers, body = response_handle:httpCall(
                      "recorder-cluster",
                      {
                        [":method"] = "POST",
                        [":path"] = "/",
                        [":authority"] = "recorder-cluster",
                        ["x-request-id"] = rid
                      },
                      "hello world",
                      5000,
                      true)
                  end
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: balancer-cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: balancer-cluster
      endpoints:
        - lb_endpoints:
          - endpoint:
             address:
              socket_address:
                address: balancer
                port_value: 11002
  - name: recorder-cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: recorder-cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: balancer
                    port_value: 11003
  - name: backend-1
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: recorder-cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: backend-1
                    port_value: 8000
  - name: backend-2
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: recorder-cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: backend-2
                    port_value: 8000
  - name: backend-3
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: recorder-cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: backend-3
                    port_value: 8000
  - name: backend-4
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: recorder-cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: backend-4
                    port_value: 8000
