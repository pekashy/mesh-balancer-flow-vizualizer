version: "3.7"
services:
  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile-dashboard
    volumes:
      - ./results:/results
    ports:
      - "8050:8050"
  tester:
    build:
      context: .
      dockerfile: Dockerfile-tester
    networks:
      - envoymesh
    links:
      - "envoy"
    depends_on:
      - "envoy"
    volumes:
    - ./results:/results
  envoy:
    build:
      context: .
      dockerfile: envoy/Dockerfile-envoy
    ports:
      - "8001:8001"
      - "30000:30000"
    networks:
      - envoymesh
    depends_on:
    - "balancer"
  balancer:
    image: pekashy/mesh-balancer:0.94
    ports:
      - "11002:11002"
      - "11003:11003"
    networks:
      - envoymesh
    depends_on:
      - "backend-1"
      - "backend-2"
      - "backend-3"
      - "backend-4"
  backend-1:
    build:
      context: .
      dockerfile: service/Dockerfile-service
    environment:
      - HOST=backend-1
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    ports:
      - "30001:8000"
  backend-2:
    build:
      context: .
      dockerfile: service/Dockerfile-service
    environment:
      - HOST=backend-2
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    ports:
      - "30002:8000"
  backend-3:
    build:
      context: .
      dockerfile: service/Dockerfile-service
    environment:
      - HOST=backend-3
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    ports:
      - "30003:8000"
  backend-4:
    build:
      context: .
      dockerfile: service/Dockerfile-service
    environment:
      - HOST=backend-4
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    ports:
      - "30004:8000"
networks:
  envoymesh:
    driver: bridge
